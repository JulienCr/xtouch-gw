This PR refactors the MIDI test pipeline, introduces an LCD rainbow animation, improves the X‑Touch API layering with safer startup/teardown, and adds a web State Viewer.

What's included
- DRY test pipeline (test-midi): extracted reusable utilities under src/test-utils/{openRawSender,runners,runMidiTest}.ts; wrapper src/test-midi-send.ts simplified
- LCD rainbow animation: src/animations/lcdRainbow.ts + runner (runLcdRainbow), integrated in modes "all" and new "lcd"; controllable stepDelayMs (default 150ms)
- X‑Touch API split: src/xtouch/api-midi.ts (Note/CC/PB, resets) and src/xtouch/api-lcd.ts (LCD text/colors, seven-seg, clearAllLcds); src/xtouch/api.ts as barrel
- Global resets: resetAll({ clearLcds: true }) at app startup (src/app.ts) and at start/end of test runs; test runners also reset LCDs
- CLI improvements: test-midi <mode> reuses active X‑Touch driver (no port conflicts) and forces explicit mode override (no env coupling)
- Defaults aligned: waveDurationMs=1200ms, lcdDurationMs=1200ms for quick runs
- Web/config-editor: new real-time State Viewer at /state (web/config-editor/app/state/page.tsx) using components/StateViewer; backed by SSE (/app/api/state/sse) and snapshot (/app/api/state/snapshot) endpoints; minimal UI "State Viewer (temps réel)"
- Tests updated/added: xtouch/api, test-utils/runners; suite green (69 tests)
- Docs/Tasks: TASKS.md updated; coverage/ removed from VCS and ignored

Why
- Reduce file size/complexity and improve reuse; avoid duplicated low-level send helpers; safer tests without port conflicts; provide quick visual LCD check; expose state for web visualization

How to test
- pnpm test (coverage) and pnpm test:unit
- In app CLI: `test-midi faders` | `test-midi buttons` | `test-midi lcd` | `test-midi all`
- Navigate to web/config-editor and run `pnpm dev`; open /state to see the live viewer
- Optional env: MIDI_TEST_MODE still supported when running standalone

Compatibility & risk
- No breaking changes expected to runtime behavior; LCD clearing added at startup; CLI test now uses active driver

Notes
- Ensure UM-ONE (or configured output) is not exclusively opened by other apps
